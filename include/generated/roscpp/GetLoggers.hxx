// Generated by gencxx from file roscpp/GetLoggers.msg
// DO NOT EDIT!


#pragma once

#include <miniros/traits/service_traits.h>


#include <roscpp/GetLoggersRequest.hxx>
#include <roscpp/GetLoggersResponse.hxx>


namespace roscpp
{

struct GetLoggers
{

typedef GetLoggersRequest Request;
typedef GetLoggersResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetLoggers
} // namespace roscpp


namespace miniros
{
namespace service_traits
{


template<>
struct MD5Sum< ::roscpp::GetLoggers > {
  static const char* value()
  {
    return "32e97e85527d4678a8f9279894bb64b0";
  }

  static const char* value(const ::roscpp::GetLoggers&) { return value(); }
};

template<>
struct DataType< ::roscpp::GetLoggers > {
  static const char* value()
  {
    return "roscpp/GetLoggers";
  }

  static const char* value(const ::roscpp::GetLoggers&) { return value(); }
};


// service_traits::MD5Sum< ::roscpp::GetLoggersRequest> should match 
// service_traits::MD5Sum< ::roscpp::GetLoggers > 
template<>
struct MD5Sum< ::roscpp::GetLoggersRequest>
{
  static const char* value()
  {
    return MD5Sum< ::roscpp::GetLoggers >::value();
  }
  static const char* value(const ::roscpp::GetLoggersRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::roscpp::GetLoggersRequest> should match 
// service_traits::DataType< ::roscpp::GetLoggers > 
template<>
struct DataType< ::roscpp::GetLoggersRequest>
{
  static const char* value()
  {
    return DataType< ::roscpp::GetLoggers >::value();
  }
  static const char* value(const ::roscpp::GetLoggersRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::roscpp::GetLoggersResponse> should match 
// service_traits::MD5Sum< ::roscpp::GetLoggers > 
template<>
struct MD5Sum< ::roscpp::GetLoggersResponse>
{
  static const char* value()
  {
    return MD5Sum< ::roscpp::GetLoggers >::value();
  }
  static const char* value(const ::roscpp::GetLoggersResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::roscpp::GetLoggersResponse> should match 
// service_traits::DataType< ::roscpp::GetLoggers > 
template<>
struct DataType< ::roscpp::GetLoggersResponse>
{
  static const char* value()
  {
    return DataType< ::roscpp::GetLoggers >::value();
  }
  static const char* value(const ::roscpp::GetLoggersResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace miniros
